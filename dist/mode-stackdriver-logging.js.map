{"version":3,"sources":["../src/mode-stackdriver-logging.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","StackdriverLoggingHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","$rules","token","regex","normalizeRules","inherits","lang","stackdriverLoggingKeyWords","keyWordsCompletions","map","word","caption","value","meta","score","Number","MAX_VALUE","wrapText","str","len","lines","space_index","line_start","next_line_end","line","i","length","slice","push","join","convertMarkDownTags","text","replace","convertToHTML","item","docText","escapeHTML","def","StackdriverLoggingCompletions","getCompletions","state","session","pos","prefix","callback","getTokenAt","row","column","type","completions","call","prototype","Behaviour","CstyleBehaviour","TokenIterator","getWrapped","selection","selected","opening","closing","rowDiff","end","start","StackdriverLoggingBehaviour","inherit","TextMode","Mode","HighlightRules","$behaviour","$completer","completer","$id"],"mappings":"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","file":"mode-stackdriver-logging.js","sourcesContent":["// jshint ignore: start\n// jscs: disable\nace.define(\"ace/mode/stackdriver-logging_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var StackdriverLoggingHighlightRules = function () {\n    var keywords = (\n      \"AND|OR|NOT\"\n    );\n\n    var builtinConstants = (\n      \"true|false\"\n    );\n\n    var builtinFunctions = (\n      \"sample|ip_in_net\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants\n    }, \"identifier\", true);\n\n    this.$rules = {\n      \"start\": [{\n        token: \"string.quoted\",\n        regex: '\"[^\"]*\"'\n      }, {\n        token: \"string\", // single line\n        regex: /\"(?:[^\"\\\\]|\\\\.)*?\"/\n      }, {\n        token: \"string\", // string\n        regex: \"'.*?'\"\n      }, {\n        token: \"constant.numeric\", // float\n        regex: \"[-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z][a-zA-Z_\\\\.]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \":|>=|<=|>|<|!=|=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[)]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n\n    this.normalizeRules();\n  };\n\n  oop.inherits(StackdriverLoggingHighlightRules, TextHighlightRules);\n\n  exports.StackdriverLoggingHighlightRules = StackdriverLoggingHighlightRules;\n});\n\nace.define(\"ace/mode/stackdriver-logging_completions\", [\"require\", \"exports\", \"module\", \"ace/token_iterator\", \"ace/lib/lang\"], function (require, exports, module) {\n  \"use strict\";\n\n  var lang = require(\"../lib/lang\");\n\n  var stackdriverLoggingKeyWords = [\n    'sample', 'ip_in_net', 'AND', 'OR', 'NOT'\n  ];\n\n  var keyWordsCompletions = stackdriverLoggingKeyWords.map(function (word) {\n    return {\n      caption: word,\n      value: word,\n      meta: \"keyword\",\n      score: Number.MAX_VALUE\n    }\n  });\n\n  function wrapText(str, len) {\n    len = len || 60;\n    var lines = [];\n    var space_index = 0;\n    var line_start = 0;\n    var next_line_end = len;\n    var line = \"\";\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === ' ') {\n        space_index = i;\n      } else if (i >= next_line_end && space_index != 0) {\n        line = str.slice(line_start, space_index);\n        lines.push(line);\n        line_start = space_index + 1;\n        next_line_end = i + len;\n        space_index = 0;\n      }\n    }\n    line = str.slice(line_start);\n    lines.push(line);\n    return lines.join(\"&nbsp<br>\");\n  }\n\n  function convertMarkDownTags(text) {\n    text = text.replace(/```(.+)```/, \"<pre>$1</pre>\");\n    text = text.replace(/`([^`]+)`/, \"<code>$1</code>\");\n    return text;\n  }\n\n  function convertToHTML(item) {\n    var docText = lang.escapeHTML(item.docText);\n    docText = convertMarkDownTags(wrapText(docText, 40));\n    return [\n      \"<b>\", lang.escapeHTML(item.def), \"</b>\", \"<hr></hr>\", docText, \"<br>&nbsp\"\n    ].join(\"\");\n  }\n\n  var StackdriverLoggingCompletions = function () { };\n\n  (function () {\n    this.getCompletions = function (state, session, pos, prefix, callback) {\n      var token = session.getTokenAt(pos.row, pos.column);\n      if (token.type === 'identifier' || token.type === 'string.quoted') {\n        return callback(null, []);\n      }\n\n      var completions = keyWordsCompletions;\n      callback(null, completions);\n    };\n\n  }).call(StackdriverLoggingCompletions.prototype);\n\n  exports.StackdriverLoggingCompletions = StackdriverLoggingCompletions;\n});\n\nace.define(\"ace/mode/behaviour/stackdriver-logging\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/mode/behaviour/cstyle\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Behaviour = require(\"../behaviour\").Behaviour;\n  var CstyleBehaviour = require(\"./cstyle\").CstyleBehaviour;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n  function getWrapped(selection, selected, opening, closing) {\n    var rowDiff = selection.end.row - selection.start.row;\n    return {\n      text: opening + selected + closing,\n      selection: [\n        0,\n        selection.start.column + 1,\n        rowDiff,\n        selection.end.column + (rowDiff ? 0 : 1)\n      ]\n    };\n  };\n\n  var StackdriverLoggingBehaviour = function () {\n    this.inherit(CstyleBehaviour);\n  }\n  oop.inherits(StackdriverLoggingBehaviour, CstyleBehaviour);\n\n  exports.StackdriverLoggingBehaviour = StackdriverLoggingBehaviour;\n});\n\nace.define(\"ace/mode/stackdriver-logging\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/stackdriver-logging_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var StackdriverLoggingHighlightRules = require(\"./stackdriver-logging_highlight_rules\").StackdriverLoggingHighlightRules;\n  var StackdriverLoggingCompletions = require(\"./stackdriver-logging_completions\").StackdriverLoggingCompletions;\n  var StackdriverLoggingBehaviour = require(\"./behaviour/stackdriver-logging\").StackdriverLoggingBehaviour;\n\n  var Mode = function () {\n    this.HighlightRules = StackdriverLoggingHighlightRules;\n    this.$behaviour = new StackdriverLoggingBehaviour();\n    this.$completer = new StackdriverLoggingCompletions();\n    // replace keyWordCompleter\n    this.completer = this.$completer;\n  };\n  oop.inherits(Mode, TextMode);\n\n  (function () {\n\n    this.$id = \"ace/mode/stackdriver-logging\";\n  }).call(Mode.prototype);\n\n  exports.Mode = Mode;\n\n});\n"]}